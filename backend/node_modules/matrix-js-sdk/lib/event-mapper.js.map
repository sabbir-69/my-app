{"version":3,"file":"event-mapper.js","names":["MatrixEvent","MatrixEventEvent","RelationType","eventMapperFor","client","options","preventReEmit","Boolean","decrypt","mapper","plainOldJsObject","room","getRoom","room_id","event","state_key","undefined","findEventById","event_id","status","setUnsigned","_objectSpread","getUnsigned","unsigned","bundledEdit","getServerAggregatedRelation","Replace","content","replacement","makeReplaced","thread","findThreadForEvent","setThread","isEncrypted","reEmitter","reEmit","Decrypted","decryptEventIfNeeded","Replaced","VisibilityChange","BeforeRedaction"],"sources":["../src/event-mapper.ts"],"sourcesContent":["/*\nCopyright 2021 The Matrix.org Foundation C.I.C.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport { type MatrixClient } from \"./client.ts\";\nimport { type IEvent, MatrixEvent, MatrixEventEvent } from \"./models/event.ts\";\nimport { RelationType } from \"./@types/event.ts\";\n\nexport type EventMapper = (obj: Partial<IEvent>) => MatrixEvent;\n\nexport interface MapperOpts {\n    // don't re-emit events emitted on an event mapped by this mapper on the client\n    preventReEmit?: boolean;\n    // decrypt event proactively\n    decrypt?: boolean;\n\n    /** @deprecated no longer used */\n    toDevice?: boolean;\n}\n\nexport function eventMapperFor(client: MatrixClient, options: MapperOpts): EventMapper {\n    let preventReEmit = Boolean(options.preventReEmit);\n    const decrypt = options.decrypt !== false;\n\n    function mapper(plainOldJsObject: Partial<IEvent>): MatrixEvent {\n        const room = client.getRoom(plainOldJsObject.room_id);\n\n        let event: MatrixEvent | undefined;\n        // If the event is already known to the room, let's re-use the model rather than duplicating.\n        // We avoid doing this to state events as they may be forward or backwards looking which tweaks behaviour.\n        if (room && plainOldJsObject.state_key === undefined) {\n            event = room.findEventById(plainOldJsObject.event_id!);\n        }\n\n        if (!event || event.status) {\n            event = new MatrixEvent(plainOldJsObject);\n        } else {\n            // merge the latest unsigned data from the server\n            event.setUnsigned({ ...event.getUnsigned(), ...plainOldJsObject.unsigned });\n            // prevent doubling up re-emitters\n            preventReEmit = true;\n        }\n\n        // if there is a complete edit bundled alongside the event, perform the replacement.\n        // (prior to MSC3925, events were automatically replaced on the server-side. MSC3925 proposes that that doesn't\n        // happen automatically but the server does provide us with the whole content of the edit event.)\n        const bundledEdit = event.getServerAggregatedRelation<Partial<IEvent>>(RelationType.Replace);\n        if (bundledEdit?.content) {\n            const replacement = mapper(bundledEdit);\n            // XXX: it's worth noting that the spec says we should only respect encrypted edits if, once decrypted, the\n            //   replacement has a `m.new_content` property. The problem is that we haven't yet decrypted the replacement\n            //   (it should be happening in the background), so we can't enforce this. Possibly we should for decryption\n            //   to complete, but that sounds a bit racy. For now, we just assume it's ok.\n            event.makeReplaced(replacement);\n        }\n\n        const thread = room?.findThreadForEvent(event);\n        if (thread) {\n            event.setThread(thread);\n        }\n\n        if (event.isEncrypted()) {\n            if (!preventReEmit) {\n                client.reEmitter.reEmit(event, [MatrixEventEvent.Decrypted]);\n            }\n            if (decrypt) {\n                client.decryptEventIfNeeded(event);\n            }\n        }\n\n        if (!preventReEmit) {\n            client.reEmitter.reEmit(event, [MatrixEventEvent.Replaced, MatrixEventEvent.VisibilityChange]);\n            room?.reEmitter.reEmit(event, [MatrixEventEvent.BeforeRedaction]);\n        }\n        return event;\n    }\n\n    return mapper;\n}\n"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,SAAsBA,WAAW,EAAEC,gBAAgB,QAAQ,mBAAmB;AAC9E,SAASC,YAAY,QAAQ,mBAAmB;AAchD,OAAO,SAASC,cAAcA,CAACC,MAAoB,EAAEC,OAAmB,EAAe;EACnF,IAAIC,aAAa,GAAGC,OAAO,CAACF,OAAO,CAACC,aAAa,CAAC;EAClD,IAAME,OAAO,GAAGH,OAAO,CAACG,OAAO,KAAK,KAAK;EAEzC,SAASC,MAAMA,CAACC,gBAAiC,EAAe;IAC5D,IAAMC,IAAI,GAAGP,MAAM,CAACQ,OAAO,CAACF,gBAAgB,CAACG,OAAO,CAAC;IAErD,IAAIC,KAA8B;IAClC;IACA;IACA,IAAIH,IAAI,IAAID,gBAAgB,CAACK,SAAS,KAAKC,SAAS,EAAE;MAClDF,KAAK,GAAGH,IAAI,CAACM,aAAa,CAACP,gBAAgB,CAACQ,QAAS,CAAC;IAC1D;IAEA,IAAI,CAACJ,KAAK,IAAIA,KAAK,CAACK,MAAM,EAAE;MACxBL,KAAK,GAAG,IAAId,WAAW,CAACU,gBAAgB,CAAC;IAC7C,CAAC,MAAM;MACH;MACAI,KAAK,CAACM,WAAW,CAAAC,aAAA,CAAAA,aAAA,KAAMP,KAAK,CAACQ,WAAW,CAAC,CAAC,GAAKZ,gBAAgB,CAACa,QAAQ,CAAE,CAAC;MAC3E;MACAjB,aAAa,GAAG,IAAI;IACxB;;IAEA;IACA;IACA;IACA,IAAMkB,WAAW,GAAGV,KAAK,CAACW,2BAA2B,CAAkBvB,YAAY,CAACwB,OAAO,CAAC;IAC5F,IAAIF,WAAW,aAAXA,WAAW,eAAXA,WAAW,CAAEG,OAAO,EAAE;MACtB,IAAMC,WAAW,GAAGnB,MAAM,CAACe,WAAW,CAAC;MACvC;MACA;MACA;MACA;MACAV,KAAK,CAACe,YAAY,CAACD,WAAW,CAAC;IACnC;IAEA,IAAME,MAAM,GAAGnB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEoB,kBAAkB,CAACjB,KAAK,CAAC;IAC9C,IAAIgB,MAAM,EAAE;MACRhB,KAAK,CAACkB,SAAS,CAACF,MAAM,CAAC;IAC3B;IAEA,IAAIhB,KAAK,CAACmB,WAAW,CAAC,CAAC,EAAE;MACrB,IAAI,CAAC3B,aAAa,EAAE;QAChBF,MAAM,CAAC8B,SAAS,CAACC,MAAM,CAACrB,KAAK,EAAE,CAACb,gBAAgB,CAACmC,SAAS,CAAC,CAAC;MAChE;MACA,IAAI5B,OAAO,EAAE;QACTJ,MAAM,CAACiC,oBAAoB,CAACvB,KAAK,CAAC;MACtC;IACJ;IAEA,IAAI,CAACR,aAAa,EAAE;MAChBF,MAAM,CAAC8B,SAAS,CAACC,MAAM,CAACrB,KAAK,EAAE,CAACb,gBAAgB,CAACqC,QAAQ,EAAErC,gBAAgB,CAACsC,gBAAgB,CAAC,CAAC;MAC9F5B,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAEuB,SAAS,CAACC,MAAM,CAACrB,KAAK,EAAE,CAACb,gBAAgB,CAACuC,eAAe,CAAC,CAAC;IACrE;IACA,OAAO1B,KAAK;EAChB;EAEA,OAAOL,MAAM;AACjB","ignoreList":[]}