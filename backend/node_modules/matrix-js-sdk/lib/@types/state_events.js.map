{"version":3,"file":"state_events.js","names":[],"sources":["../../src/@types/state_events.ts"],"sourcesContent":["/*\nCopyright 2024 The Matrix.org Foundation C.I.C.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport { type RoomType } from \"./event.ts\";\nimport { type GuestAccess, type HistoryVisibility, type JoinRule, type RestrictedAllowType } from \"./partials.ts\";\nimport { type ImageInfo } from \"./media.ts\";\nimport { type PolicyRecommendation } from \"../models/invites-ignorer.ts\";\n\nexport interface RoomCanonicalAliasEventContent {\n    alias?: string;\n    alt_aliases?: string[];\n}\n\nexport interface RoomCreateEventContent {\n    \"creator\"?: string;\n    \"m.federate\"?: boolean;\n    \"predecessor\"?: {\n        event_id: string;\n        room_id: string;\n    };\n    \"room_version\"?: string;\n    \"type\"?: RoomType;\n}\n\nexport interface RoomJoinRulesEventContent {\n    join_rule: JoinRule;\n    allow?: {\n        room_id: string;\n        type: RestrictedAllowType;\n    }[];\n}\n\nexport interface RoomMemberEventContent {\n    avatar_url?: string;\n    displayname?: string;\n    is_direct?: boolean;\n    join_authorised_via_users_server?: string;\n    membership: \"invite\" | \"join\" | \"knock\" | \"leave\" | \"ban\";\n    reason?: string;\n    third_party_invite?: {\n        display_name: string;\n        signed: {\n            mxid: string;\n            token: string;\n            ts: number;\n        };\n    };\n}\n\nexport interface RoomThirdPartyInviteEventContent {\n    display_name: string;\n    key_validity_url: string;\n    public_key: string;\n    public_keys: {\n        key_validity_url?: string;\n        public_key: string;\n    }[];\n}\n\nexport interface RoomPowerLevelsEventContent {\n    ban?: number;\n    events?: { [eventType: string]: number };\n    events_default?: number;\n    invite?: number;\n    kick?: number;\n    notifications?: {\n        room?: number;\n    };\n    redact?: number;\n    state_default?: number;\n    users?: { [userId: string]: number };\n    users_default?: number;\n}\n\nexport interface RoomNameEventContent {\n    name: string;\n}\n\nexport interface RoomTopicEventContent {\n    topic: string | undefined | null;\n}\n\nexport interface RoomAvatarEventContent {\n    url?: string;\n    // The spec says that an encrypted file can be used for the thumbnail but this isn't true\n    // https://github.com/matrix-org/matrix-spec/issues/562 so omit those fields\n    info?: Omit<ImageInfo, \"thumbnail_file\">;\n}\n\nexport interface RoomPinnedEventsEventContent {\n    pinned: string[];\n}\n\nexport interface RoomEncryptionEventContent {\n    algorithm: \"m.megolm.v1.aes-sha2\";\n    rotation_period_ms?: number;\n    rotation_period_msgs?: number;\n}\n\nexport interface RoomHistoryVisibilityEventContent {\n    history_visibility: HistoryVisibility;\n}\n\nexport interface RoomGuestAccessEventContent {\n    guest_access: GuestAccess;\n}\n\nexport interface RoomServerAclEventContent {\n    allow?: string[];\n    allow_ip_literals?: boolean;\n    deny?: string[];\n}\n\nexport interface RoomTombstoneEventContent {\n    body: string;\n    replacement_room: string;\n}\n\nexport interface SpaceChildEventContent {\n    order?: string;\n    suggested?: boolean;\n    via?: string[];\n}\n\nexport interface SpaceParentEventContent {\n    canonical?: boolean;\n    via?: string[];\n}\n\nexport interface PolicyRuleEventContent {\n    entity: string;\n    reason: string;\n    recommendation: PolicyRecommendation;\n}\n"],"mappings":"","ignoreList":[]}