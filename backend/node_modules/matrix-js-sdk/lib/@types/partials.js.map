{"version":3,"file":"partials.js","names":["Visibility","Preset","JoinRule","RestrictedAllowType","GuestAccess","HistoryVisibility"],"sources":["../../src/@types/partials.ts"],"sourcesContent":["/*\nCopyright 2021 The Matrix.org Foundation C.I.C.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nexport enum Visibility {\n    Public = \"public\",\n    Private = \"private\",\n}\n\nexport enum Preset {\n    PrivateChat = \"private_chat\",\n    TrustedPrivateChat = \"trusted_private_chat\",\n    PublicChat = \"public_chat\",\n}\n\nexport type ResizeMethod = \"crop\" | \"scale\";\n\nexport type IdServerUnbindResult = \"no-support\" | \"success\";\n\n// Knock and private are reserved keywords which are not yet implemented.\nexport enum JoinRule {\n    Public = \"public\",\n    Invite = \"invite\",\n    /**\n     * @deprecated Reserved keyword. Should not be used. Not yet implemented.\n     */\n    Private = \"private\",\n    Knock = \"knock\",\n    Restricted = \"restricted\",\n}\n\nexport enum RestrictedAllowType {\n    RoomMembership = \"m.room_membership\",\n}\n\nexport enum GuestAccess {\n    CanJoin = \"can_join\",\n    Forbidden = \"forbidden\",\n}\n\nexport enum HistoryVisibility {\n    Invited = \"invited\",\n    Joined = \"joined\",\n    Shared = \"shared\",\n    WorldReadable = \"world_readable\",\n}\n\nexport interface IUsageLimit {\n    // \"hs_disabled\" is NOT a specced string, but is used in Synapse\n    // This is tracked over at https://github.com/matrix-org/synapse/issues/9237\n    // eslint-disable-next-line camelcase\n    limit_type: \"monthly_active_user\" | \"hs_disabled\" | string;\n    // eslint-disable-next-line camelcase\n    admin_contact?: string;\n}\n\n/**\n * A policy name & url in a specific internationalisation\n * @see https://spec.matrix.org/v1.13/identity-service-api/#get_matrixidentityv2terms_response-200_internationalised-policy\n */\nexport interface InternationalisedPolicy {\n    name: string;\n    url: string;\n}\n\n/**\n * A versioned policy with internationalised variants\n * @see https://spec.matrix.org/v1.13/identity-service-api/#get_matrixidentityv2terms_response-200_policy-object\n */\nexport interface Policy {\n    /**\n     * The version for the policy.\n     * There are no requirements on what this might be and could be “alpha”, semantically versioned, or arbitrary.\n     */\n    version: string;\n    /**\n     * The policy information for the specified language.\n     * @remarks the type has to include a union with string due to limitations in the type system.\n     */\n    [lang: string]: InternationalisedPolicy | string;\n}\n\n/**\n * Response from the Terms API for Identity servers\n * @see https://spec.matrix.org/v1.13/identity-service-api/#get_matrixidentityv2terms\n */\nexport interface Terms {\n    policies: {\n        [policyName: string]: Policy;\n    };\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,WAAYA,UAAU,0BAAVA,UAAU;EAAVA,UAAU;EAAVA,UAAU;EAAA,OAAVA,UAAU;AAAA;AAKtB,WAAYC,MAAM,0BAANA,MAAM;EAANA,MAAM;EAANA,MAAM;EAANA,MAAM;EAAA,OAANA,MAAM;AAAA;AAUlB;AACA,WAAYC,QAAQ,0BAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAGhB;AACJ;AACA;EALYA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAAA,OAARA,QAAQ;AAAA;AAWpB,WAAYC,mBAAmB,0BAAnBA,mBAAmB;EAAnBA,mBAAmB;EAAA,OAAnBA,mBAAmB;AAAA;AAI/B,WAAYC,WAAW,0BAAXA,WAAW;EAAXA,WAAW;EAAXA,WAAW;EAAA,OAAXA,WAAW;AAAA;AAKvB,WAAYC,iBAAiB,0BAAjBA,iBAAiB;EAAjBA,iBAAiB;EAAjBA,iBAAiB;EAAjBA,iBAAiB;EAAjBA,iBAAiB;EAAA,OAAjBA,iBAAiB;AAAA;;AAgB7B;AACA;AACA;AACA;;AAMA;AACA;AACA;AACA;;AAcA;AACA;AACA;AACA","ignoreList":[]}