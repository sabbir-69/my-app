{"version":3,"file":"LegacyMembershipManager.js","names":["EventType","UpdateDelayedEventAction","HTTPError","MatrixError","logger","EventTimeline","sleep","DEFAULT_EXPIRE_DURATION","isLivekitFocusActive","Status","LegacyMembershipManager","networkErrorRetryMs","_ref","_this$joinConfig$netw","_this$joinConfig","_this$joinConfig2","joinConfig","callMemberEventRetryDelayMinimum","membershipEventExpiryMs","_ref2","_this$joinConfig$memb","_this$joinConfig3","_this$joinConfig4","membershipExpiryTimeout","delayedLeaveEventDelayMs","_ref3","_ref4","_this$delayedLeaveEve","_this$joinConfig5","_this$joinConfig6","delayedLeaveEventDelayMsOverride","membershipServerSideExpiryTimeout","delayedLeaveEventRestartMs","_ref5","_this$joinConfig$dela","_this$joinConfig7","_this$joinConfig8","membershipKeepAlivePeriod","constructor","room","client","getOldestMembership","_this","_defineProperty","_asyncToGenerator","updateCallMembershipRunning","needCallMembershipUpdate","updateCallMembershipEvent","knownDisconnectDelayId","disconnectDelayId","resendIfRateLimited","_unstable_updateDelayedEvent","Restart","scheduleDelayDisconnection","e","error","off","event","listener","on","isJoined","relativeExpiry","undefined","isActivated","status","Unknown","join","fociPreferred","fociActive","ownFocusActive","ownFociPreferred","triggerCallMembershipEventUpdate","leave","_arguments","arguments","_this2","timeout","length","memberEventTimeout","clearTimeout","raceResult","Promise","race","onRTCSessionMemberUpdate","memberships","_this3","isMyMembership","m","sender","getUserId","deviceId","getDeviceId","some","warn","getActiveFocus","focus_selection","oldestMembership","getPreferredFoci","makeNewMembership","makeMyMembership","_this$ownFociPreferre","call_id","scope","application","device_id","expires","focus_active","type","foci_preferred","_this4","roomState","getLiveTimeline","getState","FORWARDS","Error","roomId","localUserId","localDeviceId","newContent","stateKey","makeMembershipStateKey","prepareDelayedDisconnection","_ref8","res","_unstable_sendDelayedStateEvent","delay","GroupCallMemberPrefix","delay_id","errcode","data","maxDelayAllowed","apply","sendStateEvent","sentDelayedDisconnect","Send","info","resendDelay","concat","setTimeout","delayDisconnection","exec","getVersion","_x","_resendIfRateLimited","func","numRetriesAllowed","isRateLimitError","defaultMs","_e$getRetryAfterMs","getRetryAfterMs"],"sources":["../../src/matrixrtc/LegacyMembershipManager.ts"],"sourcesContent":["/*\nCopyright 2025 The Matrix.org Foundation C.I.C.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport { EventType } from \"../@types/event.ts\";\nimport { UpdateDelayedEventAction } from \"../@types/requests.ts\";\nimport type { MatrixClient } from \"../client.ts\";\nimport { HTTPError, MatrixError } from \"../http-api/errors.ts\";\nimport { logger } from \"../logger.ts\";\nimport { EventTimeline } from \"../models/event-timeline.ts\";\nimport { type Room } from \"../models/room.ts\";\nimport { sleep } from \"../utils.ts\";\nimport { type CallMembership, DEFAULT_EXPIRE_DURATION, type SessionMembershipData } from \"./CallMembership.ts\";\nimport { type Focus } from \"./focus.ts\";\nimport { isLivekitFocusActive } from \"./LivekitFocus.ts\";\nimport { type MembershipConfig } from \"./MatrixRTCSession.ts\";\nimport { type EmptyObject } from \"../@types/common.ts\";\nimport { Status } from \"./types.ts\";\nimport type { IMembershipManager, MembershipManagerEvent } from \"./IMembershipManager.ts\";\n\n/**\n * This internal class is used by the MatrixRTCSession to manage the local user's own membership of the session.\n *\n * Its responsibitiy is to manage the locals user membership:\n *  - send that sate event\n *  - send the delayed leave event\n *  - update the delayed leave event while connected\n *  - update the state event when it times out (for calls longer than membershipExpiryTimeout ~ 4h)\n *\n * It is possible to test this class on its own. The api surface (to use for tests) is\n * defined in `MembershipManagerInterface`.\n *\n * It is recommended to only use this interface for testing to allow replacing this class.\n *\n * @internal\n * @deprecated Use {@link MembershipManager} instead\n */\nexport class LegacyMembershipManager implements IMembershipManager {\n    private relativeExpiry: number | undefined;\n\n    private memberEventTimeout?: ReturnType<typeof setTimeout>;\n\n    /**\n     *   This is a Foci array that contains the Focus objects this user is aware of and proposes to use.\n     */\n    private ownFociPreferred?: Focus[];\n    /**\n     *   This is a Focus with the specified fields for an ActiveFocus (e.g. LivekitFocusActive for type=\"livekit\")\n     */\n    private ownFocusActive?: Focus;\n\n    private updateCallMembershipRunning = false;\n    private needCallMembershipUpdate = false;\n    /**\n     * If the server disallows the configured {@link delayedLeaveEventDelayMs},\n     * this stores a delay that the server does allow.\n     */\n    private delayedLeaveEventDelayMsOverride?: number;\n    private disconnectDelayId: string | undefined;\n\n    private get networkErrorRetryMs(): number {\n        return this.joinConfig?.networkErrorRetryMs ?? this.joinConfig?.callMemberEventRetryDelayMinimum ?? 3_000;\n    }\n    private get membershipEventExpiryMs(): number {\n        return (\n            this.joinConfig?.membershipEventExpiryMs ??\n            this.joinConfig?.membershipExpiryTimeout ??\n            DEFAULT_EXPIRE_DURATION\n        );\n    }\n    private get delayedLeaveEventDelayMs(): number {\n        return (\n            this.delayedLeaveEventDelayMsOverride ??\n            this.joinConfig?.delayedLeaveEventDelayMs ??\n            this.joinConfig?.membershipServerSideExpiryTimeout ??\n            8_000\n        );\n    }\n    private get delayedLeaveEventRestartMs(): number {\n        return this.joinConfig?.delayedLeaveEventRestartMs ?? this.joinConfig?.membershipKeepAlivePeriod ?? 5_000;\n    }\n\n    public constructor(\n        private joinConfig: MembershipConfig | undefined,\n        private room: Pick<Room, \"getLiveTimeline\" | \"roomId\" | \"getVersion\">,\n        private client: Pick<\n            MatrixClient,\n            | \"getUserId\"\n            | \"getDeviceId\"\n            | \"sendStateEvent\"\n            | \"_unstable_sendDelayedStateEvent\"\n            | \"_unstable_updateDelayedEvent\"\n        >,\n        private getOldestMembership: () => CallMembership | undefined,\n    ) {}\n\n    public off(\n        event: MembershipManagerEvent.StatusChanged,\n        listener: (oldStatus: Status, newStatus: Status) => void,\n    ): this {\n        logger.error(\"off is not implemented on LegacyMembershipManager\");\n        return this;\n    }\n\n    public on(\n        event: MembershipManagerEvent.StatusChanged,\n        listener: (oldStatus: Status, newStatus: Status) => void,\n    ): this {\n        logger.error(\"on is not implemented on LegacyMembershipManager\");\n        return this;\n    }\n\n    public isJoined(): boolean {\n        return this.relativeExpiry !== undefined;\n    }\n    public isActivated(): boolean {\n        return this.isJoined();\n    }\n    /**\n     * Unimplemented\n     * @returns Status.Unknown\n     */\n    public get status(): Status {\n        return Status.Unknown;\n    }\n\n    public join(fociPreferred: Focus[], fociActive?: Focus): void {\n        this.ownFocusActive = fociActive;\n        this.ownFociPreferred = fociPreferred;\n        this.relativeExpiry = this.membershipEventExpiryMs;\n        // We don't wait for this, mostly because it may fail and schedule a retry, so this\n        // function returning doesn't really mean anything at all.\n        void this.triggerCallMembershipEventUpdate();\n    }\n\n    public async leave(timeout: number | undefined = undefined): Promise<boolean> {\n        this.relativeExpiry = undefined;\n        this.ownFocusActive = undefined;\n\n        if (this.memberEventTimeout) {\n            clearTimeout(this.memberEventTimeout);\n            this.memberEventTimeout = undefined;\n        }\n        if (timeout) {\n            // The sleep promise returns the string 'timeout' and the membership update void\n            // A success implies that the membership update was quicker then the timeout.\n            const raceResult = await Promise.race([this.triggerCallMembershipEventUpdate(), sleep(timeout, \"timeout\")]);\n            return raceResult !== \"timeout\";\n        } else {\n            await this.triggerCallMembershipEventUpdate();\n            return true;\n        }\n    }\n\n    public async onRTCSessionMemberUpdate(memberships: CallMembership[]): Promise<void> {\n        const isMyMembership = (m: CallMembership): boolean =>\n            m.sender === this.client.getUserId() && m.deviceId === this.client.getDeviceId();\n\n        if (this.isJoined() && !memberships.some(isMyMembership)) {\n            logger.warn(\"Missing own membership: force re-join\");\n            // TODO: Should this be awaited? And is there anything to tell the focus?\n            return this.triggerCallMembershipEventUpdate();\n        }\n    }\n\n    public getActiveFocus(): Focus | undefined {\n        if (this.ownFocusActive) {\n            // A livekit active focus\n            if (isLivekitFocusActive(this.ownFocusActive)) {\n                if (this.ownFocusActive.focus_selection === \"oldest_membership\") {\n                    const oldestMembership = this.getOldestMembership();\n                    return oldestMembership?.getPreferredFoci()[0];\n                }\n            } else {\n                logger.warn(\"Unknown own ActiveFocus type. This makes it impossible to connect to an SFU.\");\n            }\n        } else {\n            // We do not understand the membership format (could be legacy). We default to oldestMembership\n            // Once there are other methods this is a hard error!\n            const oldestMembership = this.getOldestMembership();\n            return oldestMembership?.getPreferredFoci()[0];\n        }\n    }\n\n    private triggerCallMembershipEventUpdate = async (): Promise<void> => {\n        // TODO: Should this await on a shared promise?\n        if (this.updateCallMembershipRunning) {\n            this.needCallMembershipUpdate = true;\n            return;\n        }\n\n        this.updateCallMembershipRunning = true;\n        try {\n            // if anything triggers an update while the update is running, do another update afterwards\n            do {\n                this.needCallMembershipUpdate = false;\n                await this.updateCallMembershipEvent();\n            } while (this.needCallMembershipUpdate);\n        } finally {\n            this.updateCallMembershipRunning = false;\n        }\n    };\n    private makeNewMembership(deviceId: string): SessionMembershipData | EmptyObject {\n        // If we're joined, add our own\n        if (this.isJoined()) {\n            return this.makeMyMembership(deviceId);\n        }\n        return {};\n    }\n\n    /**\n     * Constructs our own membership\n     */\n    private makeMyMembership(deviceId: string): SessionMembershipData {\n        return {\n            call_id: \"\",\n            scope: \"m.room\",\n            application: \"m.call\",\n            device_id: deviceId,\n            expires: this.relativeExpiry,\n            focus_active: { type: \"livekit\", focus_selection: \"oldest_membership\" },\n            foci_preferred: this.ownFociPreferred ?? [],\n        };\n    }\n\n    private async updateCallMembershipEvent(): Promise<void> {\n        if (this.memberEventTimeout) {\n            clearTimeout(this.memberEventTimeout);\n            this.memberEventTimeout = undefined;\n        }\n\n        const roomState = this.room.getLiveTimeline().getState(EventTimeline.FORWARDS);\n        if (!roomState) throw new Error(\"Couldn't get room state for room \" + this.room.roomId);\n\n        const localUserId = this.client.getUserId();\n        const localDeviceId = this.client.getDeviceId();\n        if (!localUserId || !localDeviceId) throw new Error(\"User ID or device ID was null!\");\n\n        let newContent: EmptyObject | SessionMembershipData = {};\n        // TODO: add back expiary logic to non-legacy events\n        // previously we checked here if the event is timed out and scheduled a check if not.\n        // maybe there is a better way.\n        newContent = this.makeNewMembership(localDeviceId);\n\n        try {\n            if (this.isJoined()) {\n                const stateKey = this.makeMembershipStateKey(localUserId, localDeviceId);\n                const prepareDelayedDisconnection = async (): Promise<void> => {\n                    try {\n                        const res = await resendIfRateLimited(() =>\n                            this.client._unstable_sendDelayedStateEvent(\n                                this.room.roomId,\n                                {\n                                    delay: this.delayedLeaveEventDelayMs,\n                                },\n                                EventType.GroupCallMemberPrefix,\n                                {}, // leave event\n                                stateKey,\n                            ),\n                        );\n                        this.disconnectDelayId = res.delay_id;\n                    } catch (e) {\n                        if (\n                            e instanceof MatrixError &&\n                            e.errcode === \"M_UNKNOWN\" &&\n                            e.data[\"org.matrix.msc4140.errcode\"] === \"M_MAX_DELAY_EXCEEDED\"\n                        ) {\n                            const maxDelayAllowed = e.data[\"org.matrix.msc4140.max_delay\"];\n                            if (\n                                typeof maxDelayAllowed === \"number\" &&\n                                this.delayedLeaveEventDelayMs > maxDelayAllowed\n                            ) {\n                                this.delayedLeaveEventDelayMsOverride = maxDelayAllowed;\n                                return prepareDelayedDisconnection();\n                            }\n                        }\n                        logger.error(\"Failed to prepare delayed disconnection event:\", e);\n                    }\n                };\n\n                await prepareDelayedDisconnection();\n                // Send join event _after_ preparing the delayed disconnection event\n                await resendIfRateLimited(() =>\n                    this.client.sendStateEvent(this.room.roomId, EventType.GroupCallMemberPrefix, newContent, stateKey),\n                );\n                // If sending state cancels your own delayed state, prepare another delayed state\n                // TODO: Remove this once MSC4140 is stable & doesn't cancel own delayed state\n                if (this.disconnectDelayId !== undefined) {\n                    try {\n                        const knownDisconnectDelayId = this.disconnectDelayId;\n                        await resendIfRateLimited(() =>\n                            this.client._unstable_updateDelayedEvent(\n                                knownDisconnectDelayId,\n                                UpdateDelayedEventAction.Restart,\n                            ),\n                        );\n                    } catch (e) {\n                        if (e instanceof MatrixError && e.errcode === \"M_NOT_FOUND\") {\n                            // If we get a M_NOT_FOUND we prepare a new delayed event.\n                            // In other error cases we do not want to prepare anything since we do not have the guarantee, that the\n                            // future is not still running.\n                            logger.warn(\"Failed to update delayed disconnection event, prepare it again:\", e);\n                            this.disconnectDelayId = undefined;\n                            await prepareDelayedDisconnection();\n                        }\n                    }\n                }\n                if (this.disconnectDelayId !== undefined) {\n                    this.scheduleDelayDisconnection();\n                }\n                // TODO throw or log an error if this.disconnectDelayId === undefined\n            } else {\n                // Not joined\n                let sentDelayedDisconnect = false;\n                if (this.disconnectDelayId !== undefined) {\n                    try {\n                        const knownDisconnectDelayId = this.disconnectDelayId;\n                        await resendIfRateLimited(() =>\n                            this.client._unstable_updateDelayedEvent(\n                                knownDisconnectDelayId,\n                                UpdateDelayedEventAction.Send,\n                            ),\n                        );\n                        sentDelayedDisconnect = true;\n                    } catch (e) {\n                        logger.error(\"Failed to send our delayed disconnection event:\", e);\n                    }\n                    this.disconnectDelayId = undefined;\n                }\n                if (!sentDelayedDisconnect) {\n                    await resendIfRateLimited(() =>\n                        this.client.sendStateEvent(\n                            this.room.roomId,\n                            EventType.GroupCallMemberPrefix,\n                            {},\n                            this.makeMembershipStateKey(localUserId, localDeviceId),\n                        ),\n                    );\n                }\n            }\n            logger.info(\"Sent updated call member event.\");\n        } catch (e) {\n            const resendDelay = this.networkErrorRetryMs;\n            logger.warn(`Failed to send call member event (retrying in ${resendDelay}): ${e}`);\n            await sleep(resendDelay);\n            await this.triggerCallMembershipEventUpdate();\n        }\n    }\n\n    private scheduleDelayDisconnection(): void {\n        this.memberEventTimeout = setTimeout(() => void this.delayDisconnection(), this.delayedLeaveEventRestartMs);\n    }\n\n    private readonly delayDisconnection = async (): Promise<void> => {\n        try {\n            const knownDisconnectDelayId = this.disconnectDelayId!;\n            await resendIfRateLimited(() =>\n                this.client._unstable_updateDelayedEvent(knownDisconnectDelayId, UpdateDelayedEventAction.Restart),\n            );\n            this.scheduleDelayDisconnection();\n        } catch (e) {\n            logger.error(\"Failed to delay our disconnection event:\", e);\n        }\n    };\n\n    private makeMembershipStateKey(localUserId: string, localDeviceId: string): string {\n        const stateKey = `${localUserId}_${localDeviceId}`;\n        if (/^org\\.matrix\\.msc(3757|3779)\\b/.exec(this.room.getVersion())) {\n            return stateKey;\n        } else {\n            return `_${stateKey}`;\n        }\n    }\n}\n\nasync function resendIfRateLimited<T>(func: () => Promise<T>, numRetriesAllowed: number = 1): Promise<T> {\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        try {\n            return await func();\n        } catch (e) {\n            if (numRetriesAllowed > 0 && e instanceof HTTPError && e.isRateLimitError()) {\n                numRetriesAllowed--;\n                let resendDelay: number;\n                const defaultMs = 5000;\n                try {\n                    resendDelay = e.getRetryAfterMs() ?? defaultMs;\n                    logger.info(`Rate limited by server, retrying in ${resendDelay}ms`);\n                } catch (e) {\n                    logger.warn(\n                        `Error while retrieving a rate-limit retry delay, retrying after default delay of ${defaultMs}`,\n                        e,\n                    );\n                    resendDelay = defaultMs;\n                }\n                await sleep(resendDelay);\n            } else {\n                throw e;\n            }\n        }\n    }\n}\n"],"mappings":"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","ignoreList":[]}