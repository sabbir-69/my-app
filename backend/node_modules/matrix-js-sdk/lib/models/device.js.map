{"version":3,"file":"device.js","names":["DeviceVerification","Device","constructor","opts","_defineProperty","deviceId","userId","algorithms","keys","verified","Unverified","signatures","Map","displayName","dehydrated","getFingerprint","get","concat","getIdentityKey"],"sources":["../../src/models/device.ts"],"sourcesContent":["/*\nCopyright 2023 The Matrix.org Foundation C.I.C.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\n/** State of the verification of the device. */\nexport enum DeviceVerification {\n    Blocked = -1,\n    Unverified = 0,\n    Verified = 1,\n}\n\n/** A map from user ID to device ID to Device */\nexport type DeviceMap = Map<string, Map<string, Device>>;\n\ntype DeviceParameters = Pick<Device, \"deviceId\" | \"userId\" | \"algorithms\" | \"keys\"> & Partial<Device>;\n\n/**\n *  Information on a user's device, as returned by {@link crypto-api!CryptoApi.getUserDeviceInfo}.\n */\nexport class Device {\n    /** id of the device */\n    public readonly deviceId: string;\n\n    /** id of the user that owns the device */\n    public readonly userId: string;\n\n    /** list of algorithms supported by this device */\n    public readonly algorithms: string[];\n\n    /** a map from `<key type>:<id> -> <base64-encoded key>` */\n    public readonly keys: Map<string, string>;\n\n    /** whether the device has been verified/blocked by the user */\n    public readonly verified: DeviceVerification;\n\n    /** a map `<userId, map<algorithm:device_id, signature>>` */\n    public readonly signatures: Map<string, Map<string, string>>;\n\n    /** display name of the device */\n    public readonly displayName?: string;\n\n    /** whether the device is a dehydrated device */\n    public readonly dehydrated: boolean = false;\n\n    public constructor(opts: DeviceParameters) {\n        this.deviceId = opts.deviceId;\n        this.userId = opts.userId;\n        this.algorithms = opts.algorithms;\n        this.keys = opts.keys;\n        this.verified = opts.verified || DeviceVerification.Unverified;\n        this.signatures = opts.signatures || new Map();\n        this.displayName = opts.displayName;\n        this.dehydrated = !!opts.dehydrated;\n    }\n\n    /**\n     * Get the fingerprint for this device (ie, the Ed25519 key)\n     *\n     * @returns base64-encoded fingerprint of this device\n     */\n    public getFingerprint(): string | undefined {\n        return this.keys.get(`ed25519:${this.deviceId}`);\n    }\n\n    /**\n     * Get the identity key for this device (ie, the Curve25519 key)\n     *\n     * @returns base64-encoded identity key of this device\n     */\n    public getIdentityKey(): string | undefined {\n        return this.keys.get(`curve25519:${this.deviceId}`);\n    }\n}\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAYA,kBAAkB,0BAAlBA,kBAAkB;EAAlBA,kBAAkB,CAAlBA,kBAAkB;EAAlBA,kBAAkB,CAAlBA,kBAAkB;EAAlBA,kBAAkB,CAAlBA,kBAAkB;EAAA,OAAlBA,kBAAkB;AAAA;;AAM9B;;AAKA;AACA;AACA;AACA,OAAO,MAAMC,MAAM,CAAC;EAyBTC,WAAWA,CAACC,IAAsB,EAAE;IAxB3C;IAAAC,eAAA;IAGA;IAAAA,eAAA;IAGA;IAAAA,eAAA;IAGA;IAAAA,eAAA;IAGA;IAAAA,eAAA;IAGA;IAAAA,eAAA;IAGA;IAAAA,eAAA;IAGA;IAAAA,eAAA,qBACsC,KAAK;IAGvC,IAAI,CAACC,QAAQ,GAAGF,IAAI,CAACE,QAAQ;IAC7B,IAAI,CAACC,MAAM,GAAGH,IAAI,CAACG,MAAM;IACzB,IAAI,CAACC,UAAU,GAAGJ,IAAI,CAACI,UAAU;IACjC,IAAI,CAACC,IAAI,GAAGL,IAAI,CAACK,IAAI;IACrB,IAAI,CAACC,QAAQ,GAAGN,IAAI,CAACM,QAAQ,IAAIT,kBAAkB,CAACU,UAAU;IAC9D,IAAI,CAACC,UAAU,GAAGR,IAAI,CAACQ,UAAU,IAAI,IAAIC,GAAG,CAAC,CAAC;IAC9C,IAAI,CAACC,WAAW,GAAGV,IAAI,CAACU,WAAW;IACnC,IAAI,CAACC,UAAU,GAAG,CAAC,CAACX,IAAI,CAACW,UAAU;EACvC;;EAEA;AACJ;AACA;AACA;AACA;EACWC,cAAcA,CAAA,EAAuB;IACxC,OAAO,IAAI,CAACP,IAAI,CAACQ,GAAG,YAAAC,MAAA,CAAY,IAAI,CAACZ,QAAQ,CAAE,CAAC;EACpD;;EAEA;AACJ;AACA;AACA;AACA;EACWa,cAAcA,CAAA,EAAuB;IACxC,OAAO,IAAI,CAACV,IAAI,CAACQ,GAAG,eAAAC,MAAA,CAAe,IAAI,CAACZ,QAAQ,CAAE,CAAC;EACvD;AACJ","ignoreList":[]}