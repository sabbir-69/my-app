{"version":3,"file":"OutgoingRequestProcessor.js","names":["KeysBackupRequest","KeysClaimRequest","KeysQueryRequest","KeysUploadRequest","PutDehydratedDeviceRequest","RoomMessageRequest","SignatureUploadRequest","ToDeviceRequest","UploadSigningKeysRequest","logger","calculateRetryBackoff","Method","logDuration","sleep","ToDeviceMessageId","UnstablePrefix","DehydrationUnstablePrefix","OutgoingRequestProcessor","constructor","olmMachine","http","makeOutgoingRequest","msg","uiaCallback","_this","_asyncToGenerator","resp","requestWithRetry","Post","body","Put","version","sendToDeviceRequest","path","concat","encodeURIComponent","room_id","event_type","txn_id","makeRequestWithUIA","rawJsonRequest","warn","Object","getPrototypeOf","id","type","markRequestAsSent","e","Error","message","log","trace","request","_this2","parsedBody","JSON","parse","messageList","userId","perUserMessages","entries","messages","deviceId","push","info","method","queryParams","_this3","makeRequest","_ref2","auth","newBody","_objectSpread","stringify","_x","apply","arguments","_this4","currentRetryCount","backoff","_this5","opts","json","headers","prefix","localTimeoutMs","authedRequest"],"sources":["../../src/rust-crypto/OutgoingRequestProcessor.ts"],"sourcesContent":["/*\nCopyright 2023 The Matrix.org Foundation C.I.C.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport {\n    KeysBackupRequest,\n    KeysClaimRequest,\n    KeysQueryRequest,\n    KeysUploadRequest,\n    type OlmMachine,\n    type OutgoingRequest,\n    PutDehydratedDeviceRequest,\n    RoomMessageRequest,\n    SignatureUploadRequest,\n    ToDeviceRequest,\n    UploadSigningKeysRequest,\n} from \"@matrix-org/matrix-sdk-crypto-wasm\";\n\nimport { logger } from \"../logger.ts\";\nimport { calculateRetryBackoff, type IHttpOpts, type MatrixHttpApi, Method } from \"../http-api/index.ts\";\nimport { logDuration, type QueryDict, sleep } from \"../utils.ts\";\nimport { type AuthDict, type UIAuthCallback } from \"../interactive-auth.ts\";\nimport { ToDeviceMessageId } from \"../@types/event.ts\";\nimport { UnstablePrefix as DehydrationUnstablePrefix } from \"./DehydratedDeviceManager.ts\";\n\n/**\n * OutgoingRequestManager: turns `OutgoingRequest`s from the rust sdk into HTTP requests\n *\n * We have one of these per `RustCrypto` (and hence per `MatrixClient`), not that it does anything terribly complicated.\n * It's responsible for:\n *\n *   * holding the reference to the `MatrixHttpApi`\n *   * turning `OutgoingRequest`s from the rust backend into HTTP requests, and sending them\n *   * sending the results of such requests back to the rust backend.\n *\n * @internal\n */\nexport class OutgoingRequestProcessor {\n    public constructor(\n        private readonly olmMachine: OlmMachine,\n        private readonly http: MatrixHttpApi<IHttpOpts & { onlyData: true }>,\n    ) {}\n\n    public async makeOutgoingRequest<T>(\n        msg: OutgoingRequest | UploadSigningKeysRequest | PutDehydratedDeviceRequest,\n        uiaCallback?: UIAuthCallback<T>,\n    ): Promise<void> {\n        let resp: string;\n\n        /* refer https://docs.rs/matrix-sdk-crypto/0.6.0/matrix_sdk_crypto/requests/enum.OutgoingRequests.html\n         * for the complete list of request types\n         */\n        if (msg instanceof KeysUploadRequest) {\n            resp = await this.requestWithRetry(Method.Post, \"/_matrix/client/v3/keys/upload\", {}, msg.body);\n        } else if (msg instanceof KeysQueryRequest) {\n            resp = await this.requestWithRetry(Method.Post, \"/_matrix/client/v3/keys/query\", {}, msg.body);\n        } else if (msg instanceof KeysClaimRequest) {\n            resp = await this.requestWithRetry(Method.Post, \"/_matrix/client/v3/keys/claim\", {}, msg.body);\n        } else if (msg instanceof SignatureUploadRequest) {\n            resp = await this.requestWithRetry(Method.Post, \"/_matrix/client/v3/keys/signatures/upload\", {}, msg.body);\n        } else if (msg instanceof KeysBackupRequest) {\n            resp = await this.requestWithRetry(\n                Method.Put,\n                \"/_matrix/client/v3/room_keys/keys\",\n                { version: msg.version },\n                msg.body,\n            );\n        } else if (msg instanceof ToDeviceRequest) {\n            resp = await this.sendToDeviceRequest(msg);\n        } else if (msg instanceof RoomMessageRequest) {\n            const path =\n                `/_matrix/client/v3/rooms/${encodeURIComponent(msg.room_id)}/send/` +\n                `${encodeURIComponent(msg.event_type)}/${encodeURIComponent(msg.txn_id)}`;\n            resp = await this.requestWithRetry(Method.Put, path, {}, msg.body);\n        } else if (msg instanceof UploadSigningKeysRequest) {\n            await this.makeRequestWithUIA(\n                Method.Post,\n                \"/_matrix/client/v3/keys/device_signing/upload\",\n                {},\n                msg.body,\n                uiaCallback,\n            );\n            // SigningKeysUploadRequest does not implement OutgoingRequest and does not need to be marked as sent.\n            return;\n        } else if (msg instanceof PutDehydratedDeviceRequest) {\n            const path = DehydrationUnstablePrefix + \"/dehydrated_device\";\n            await this.rawJsonRequest(Method.Put, path, {}, msg.body);\n            // PutDehydratedDeviceRequest does not implement OutgoingRequest and does not need to be marked as sent.\n            return;\n        } else {\n            logger.warn(\"Unsupported outgoing message\", Object.getPrototypeOf(msg));\n            resp = \"\";\n        }\n\n        if (msg.id) {\n            try {\n                await logDuration(logger, `Mark Request as sent ${msg.type}`, async () => {\n                    await this.olmMachine.markRequestAsSent(msg.id!, msg.type, resp);\n                });\n            } catch (e) {\n                // Ignore errors which are caused by the olmMachine having been freed. The exact error message depends\n                // on whether we are using a release or develop build of rust-sdk-crypto-wasm.\n                if (\n                    e instanceof Error &&\n                    (e.message === \"Attempt to use a moved value\" || e.message === \"null pointer passed to rust\")\n                ) {\n                    logger.log(`Ignoring error '${e.message}': client is likely shutting down`);\n                } else {\n                    throw e;\n                }\n            }\n        } else {\n            logger.trace(`Outgoing request type:${msg.type} does not have an ID`);\n        }\n    }\n\n    /**\n     * Send the HTTP request for a `ToDeviceRequest`\n     *\n     * @param request - request to send\n     * @returns JSON-serialized body of the response, if successful\n     */\n    private async sendToDeviceRequest(request: ToDeviceRequest): Promise<string> {\n        // a bit of extra logging, to help trace to-device messages through the system\n        const parsedBody: { messages: Record<string, Record<string, Record<string, any>>> } = JSON.parse(request.body);\n\n        const messageList = [];\n        for (const [userId, perUserMessages] of Object.entries(parsedBody.messages)) {\n            for (const [deviceId, message] of Object.entries(perUserMessages)) {\n                messageList.push(`${userId}/${deviceId} (msgid ${message[ToDeviceMessageId]})`);\n            }\n        }\n\n        logger.info(\n            `Sending batch of to-device messages. type=${request.event_type} txnid=${request.txn_id}`,\n            messageList,\n        );\n\n        const path =\n            `/_matrix/client/v3/sendToDevice/${encodeURIComponent(request.event_type)}/` +\n            encodeURIComponent(request.txn_id);\n        return await this.requestWithRetry(Method.Put, path, {}, request.body);\n    }\n\n    private async makeRequestWithUIA<T>(\n        method: Method,\n        path: string,\n        queryParams: QueryDict,\n        body: string,\n        uiaCallback: UIAuthCallback<T> | undefined,\n    ): Promise<string> {\n        if (!uiaCallback) {\n            return await this.requestWithRetry(method, path, queryParams, body);\n        }\n\n        const parsedBody = JSON.parse(body);\n        const makeRequest = async (auth: AuthDict | null): Promise<T> => {\n            const newBody: Record<string, any> = {\n                ...parsedBody,\n            };\n            if (auth !== null) {\n                newBody.auth = auth;\n            }\n            const resp = await this.requestWithRetry(method, path, queryParams, JSON.stringify(newBody));\n            return JSON.parse(resp) as T;\n        };\n\n        const resp = await uiaCallback(makeRequest);\n        return JSON.stringify(resp);\n    }\n\n    private async requestWithRetry(\n        method: Method,\n        path: string,\n        queryParams: QueryDict,\n        body: string,\n    ): Promise<string> {\n        let currentRetryCount = 0;\n\n        // eslint-disable-next-line no-constant-condition\n        while (true) {\n            try {\n                return await this.rawJsonRequest(method, path, queryParams, body);\n            } catch (e) {\n                currentRetryCount++;\n                const backoff = calculateRetryBackoff(e, currentRetryCount, true);\n                if (backoff < 0) {\n                    // Max number of retries reached, or error is not retryable. rethrow the error\n                    throw e;\n                }\n                // wait for the specified time and then retry the request\n                await sleep(backoff);\n            }\n        }\n    }\n\n    private async rawJsonRequest(method: Method, path: string, queryParams: QueryDict, body: string): Promise<string> {\n        const opts = {\n            // inhibit the JSON stringification and parsing within HttpApi.\n            json: false,\n\n            // nevertheless, we are sending, and accept, JSON.\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\",\n            },\n\n            // we use the full prefix\n            prefix: \"\",\n\n            // We set a timeout of 60 seconds to guard against requests getting stuck forever and wedging the\n            // request loop (cf https://github.com/element-hq/element-web/issues/29534).\n            //\n            // (XXX: should we do this in the whole of the js-sdk?)\n            localTimeoutMs: 60000,\n        };\n\n        return await this.http.authedRequest<string>(method, path, queryParams, body, opts);\n    }\n}\n"],"mappings":"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","ignoreList":[]}