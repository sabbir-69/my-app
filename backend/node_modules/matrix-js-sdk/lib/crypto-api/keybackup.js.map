{"version":3,"file":"keybackup.js","names":[],"sources":["../../src/crypto-api/keybackup.ts"],"sourcesContent":["/*\nCopyright 2023 The Matrix.org Foundation C.I.C.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport { type ISigned } from \"../@types/signed.ts\";\nimport { type AESEncryptedSecretStoragePayload } from \"../@types/AESEncryptedSecretStoragePayload.ts\";\nimport { type ImportRoomKeyProgressData } from \"./index.ts\";\n\nexport interface Curve25519AuthData {\n    public_key: string;\n    private_key_salt?: string;\n    private_key_iterations?: number;\n    private_key_bits?: number;\n}\n\nexport interface Aes256AuthData {\n    iv: string;\n    mac: string;\n    private_key_salt?: string;\n    private_key_iterations?: number;\n}\n\n/**\n * Information about a server-side key backup.\n *\n * Returned by [`GET /_matrix/client/v3/room_keys/version`](https://spec.matrix.org/v1.7/client-server-api/#get_matrixclientv3room_keysversion).\n */\nexport interface KeyBackupInfo {\n    algorithm: string;\n    auth_data: ISigned & (Curve25519AuthData | Aes256AuthData);\n    count?: number;\n    etag?: string;\n    version?: string; // number contained within\n}\n\n/**\n * Information on whether a given server-side backup is trusted.\n */\nexport interface BackupTrustInfo {\n    /**\n     * Is this backup trusted?\n     *\n     * True if, and only if, there is a valid signature on the backup from a trusted device.\n     */\n    readonly trusted: boolean;\n\n    /**\n     * True if this backup matches the stored decryption key.\n     */\n    readonly matchesDecryptionKey: boolean;\n}\n\n/**\n * The result of {@link CryptoApi.checkKeyBackupAndEnable}.\n */\nexport interface KeyBackupCheck {\n    backupInfo: KeyBackupInfo;\n    trustInfo: BackupTrustInfo;\n}\n\nexport interface Curve25519SessionData {\n    ciphertext: string;\n    ephemeral: string;\n    mac: string;\n}\n\n/* eslint-disable camelcase */\nexport interface KeyBackupSession<T = Curve25519SessionData | AESEncryptedSecretStoragePayload> {\n    first_message_index: number;\n    forwarded_count: number;\n    is_verified: boolean;\n    session_data: T;\n}\n\nexport interface KeyBackupRoomSessions {\n    [sessionId: string]: KeyBackupSession;\n}\n\n/**\n * Extra parameters for {@link CryptoApi.restoreKeyBackup} and {@link CryptoApi.restoreKeyBackupWithPassphrase}.\n */\nexport interface KeyBackupRestoreOpts {\n    /**\n     * A callback which, if defined, will be called periodically to report ongoing progress of the backup restore process.\n     * @param progress\n     */\n    progressCallback?: (progress: ImportRoomKeyProgressData) => void;\n}\n\n/**\n * The result of {@link CryptoApi.restoreKeyBackup}.\n */\nexport interface KeyBackupRestoreResult {\n    /**\n     * The total number of keys that were found in the backup.\n     */\n    total: number;\n    /**\n     * The number of keys that were imported.\n     */\n    imported: number;\n}\n"],"mappings":"","ignoreList":[]}